name: '[Pipeline] Build and deploy Docker images'

on:
  push:
    branches: [ main ]
  workflow_dispatch:

concurrency:
  group: build
  cancel-in-progress: true

permissions:
  contents: read
  id-token: write
  packages: write

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        version: [ 16, 17, 18 ]
    name: Build PostgreSQL ${{ matrix.version }} with Pig CLI
    steps:
      - uses: actions/checkout@v4
        name: Checkout

      - name: Setup QEMU
        uses: docker/setup-qemu-action@v2

      - name: Setup Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Docker login
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ghcr.io/${{ github.repository_owner }}/postgresql-pig
          tags: |
            type=sha
            type=raw,value=${{ matrix.version }}
            type=raw,value=latest,enabled=${{ matrix.version == '18' }}

      - name: Build and push
        uses: docker/build-push-action@v6
        with:
          build-args: |
            PG_VERSION=${{ matrix.version }}
          push: true
          platforms: linux/amd64,linux/arm64
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

  deploy:
    runs-on: self-hosted
    needs: [ build ]
    name: Deploy to srv-pg-01
    steps:
      - uses: actions/checkout@v4
        name: Checkout

      - name: Deploy
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          POSTGRES_PASSWORD: ${{ secrets.POSTGRESQL_PASSWORD }}
        run: docker compose up --wait
